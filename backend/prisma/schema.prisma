generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(150)
  description String?  @db.Text
  isPromo     Boolean  @default(false) @map("is_promo")
  basePrice   Decimal  @map("base_price") @db.Decimal(10, 2)
  promoPrice  Decimal? @map("promo_price") @db.Decimal(10, 2)
  imageUrl    String?  @map("image_url") @db.VarChar(255)
  stock       Int      @default(0)
  totalSold   Int      @default(0) @map("total_sold")

  unit   Unit @relation(fields: [unitId], references: [id])
  unitId Int  @map("unit_id")

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int      @map("category_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  testimonials Testimonial[]

  @@map("products")
}

model Unit {
  id       Int       @id @default(autoincrement())
  name     String    @unique @db.VarChar(75)
  products Product[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("units")
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique @db.VarChar(150)
  products Product[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("categories")
}

model SearchHistory {
  id         Int      @id @default(autoincrement())
  userToken  String?  @map("user_token") @db.VarChar(100)
  searchTerm String   @map("search_term") @db.VarChar(255)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("search_histories")
}

model Testimonial {
  id            Int     @id @default(autoincrement())
  customerName  String  @map("customer_name") @db.VarChar(150)
  customerTitle String  @map("customer_title") @db.VarChar(100)
  rating        Float   @default(5.0) @db.Float
  content       String? @db.VarChar(255)

  product   Product @relation(fields: [productId], references: [id])
  productId Int     @map("product_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  images     TestimonialImage[]
  ratingTags TestimonialRatingTag[]

  @@map("testimonials")
}

model TestimonialImage {
  id       Int    @id @default(autoincrement())
  imageUrl String @map("image_url") @db.VarChar(255)

  testimonial   Testimonial @relation(fields: [testimonialId], references: [id])
  testimonialId Int         @map("testimonial_id")

  @@map("testimonial_images")
}

model RatingTagType {
  id   Int    @id @default(autoincrement())
  name String @unique @db.VarChar(100)

  ratings TestimonialRatingTag[]

  @@map("rating_tag_types")
}

model TestimonialRatingTag {
  id          Int @id @default(autoincrement())
  ratingValue Int @map("rating_value")

  testimonial   Testimonial @relation(fields: [testimonialId], references: [id])
  testimonialId Int         @map("testimonial_id")

  tagType   RatingTagType @relation(fields: [tagTypeId], references: [id])
  tagTypeId Int           @map("tag_type_id")

  @@map("testimonial_rating_tags")
}

model Faq {
  id        Int      @id @default(autoincrement())
  question  String   @db.VarChar(255)
  answer    String   @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("faqs")
}

model Lead {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("leads")
}
